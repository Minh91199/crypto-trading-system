-- Users Table
CREATE TABLE crypto_user (
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username    VARCHAR(255) NOT NULL UNIQUE,
    created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Wallet Table
CREATE TABLE wallet (
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     INT NOT NULL,
    currency    VARCHAR(10) NOT NULL,  -- ETH, BTC, USDT
    balance     DECIMAL(18, 8) NOT NULL DEFAULT 0,
    updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_wallet_user FOREIGN KEY (user_id) REFERENCES crypto_user (id),
    CONSTRAINT uc_wallet UNIQUE (user_id, currency)
);

-- Price Aggregation Table
CREATE TABLE aggregated_price (
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    symbol       VARCHAR(10) NOT NULL,    -- ETHUSDT, BTCUSDT
    bid_price    DECIMAL(18, 8) NOT NULL,   -- For SELL orders
    ask_price    DECIMAL(18, 8) NOT NULL,   -- For BUY orders
    created_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Trading Transactions Table
CREATE TABLE trade_transaction (
    id              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         INT NOT NULL,
    symbol          VARCHAR(10) NOT NULL,
    trade_type      VARCHAR(4) CHECK (trade_type IN ('BUY','SELL')) NOT NULL,
    trade_price     DECIMAL(18, 8) NOT NULL,
    quantity        DECIMAL(18, 8) NOT NULL,
    trade_time      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    wallet_before   DECIMAL(18, 8),
    wallet_after    DECIMAL(18, 8),
    CONSTRAINT fk_trade_user FOREIGN KEY (user_id) REFERENCES crypto_user (id)
);
